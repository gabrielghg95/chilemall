<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Orden extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Orden_model');
    }

    /*
     * Listing of ordenes
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE;
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('orden/index?');
        $config['total_rows'] = $this->Orden_model->get_all_ordenes_count();
        $this->pagination->initialize($config);

        $data['ordenes'] = $this->Orden_model->get_all_ordenes($params);

        $data['_view'] = 'orden/index';
        $this->load->view('layouts/main', $data);
    }

    function redirect($id)
    {
        $data['all_locales'] = $this->Orden_model->get_all_locales();
        $data['all_categorias'] = $this->Orden_model->get_all_categorias();
        $data['producto'] = $this->Orden_model->get_producto($id);
        $data['productos'] = $this->Orden_model->get_all_productos();

        $data['_view'] = 'vitrina/orden_compra';
        $this->load->view('layouts/index', $data);
    }

    function redirect2($id)
    {
        $data['all_locales'] = $this->Orden_model->get_all_locales();
        $data['all_categorias'] = $this->Orden_model->get_all_categorias();
        $data['producto'] = $this->Orden_model->get_producto($id);
        $data['productos'] = $this->Orden_model->get_all_productos();

        $data['_view'] = 'vitrina/continuar';
        $this->load->view('layouts/index', $data);
    }

    function mostrar_orden()
    {
        $this->load->model('Categoria_model');
        $data['all_categorias'] = $this->Categoria_model->get_all_categorias();

        $this->load->model('Local_model');
        $data['all_locales'] = $this->Local_model->get_all_locales();

        $data['_view'] = 'vitrina/mostrar_orden';
        $this->load->view('layouts/index', $data);
    }

    function final_orden()
    {
        $this->load->model('Categoria_model');
        $data['all_categorias'] = $this->Categoria_model->get_all_categorias();

        $this->load->model('Local_model');
        $data['all_locales'] = $this->Local_model->get_all_locales();

        $data['_view'] = 'vitrina/final_orden';
        $this->load->view('layouts/index', $data);
    }

    /*
     * Adding a new orden
     */
    function add()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'producto_fk' => $this->input->post('producto_fk'),
                'cliente_fk' => $this->input->post('cliente_fk'),
                'cantidad' => $this->input->post('cantidad'),
                'precio' => $this->input->post('precio'),
                'creado_en' => $this->input->post('creado_en'),
            );

            $orden_id = $this->Orden_model->add_orden($params);
            redirect('orden/index');
        } else {
            $this->load->model('Producto_model');
            $data['all_productos'] = $this->Producto_model->get_all_productos();

            $this->load->model('Cliente_model');
            $data['all_clientes'] = $this->Cliente_model->get_all_clientes();

            $data['_view'] = 'orden/add';
            $this->load->view('layouts/main', $data);
        }
    }
    function add2()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'producto_fk' => $this->input->post('producto_fk'),
                'cliente_fk' => $this->input->post('cliente_fk'),
                'cantidad' => $this->input->post('cantidad'),
                'precio' => $this->input->post('precio'),
                'creado_en' => $this->input->post('creado_en'),
            );
            $prod = $this->input->post('producto_fk');
            $orden_id = $this->Orden_model->add_orden($params);
            redirect('orden/redirect2/'.$prod);
        } else {
            $this->load->model('Producto_model');
            $data['all_productos'] = $this->Producto_model->get_all_productos();

            $this->load->model('Cliente_model');
            $data['all_clientes'] = $this->Cliente_model->get_all_clientes();

            $data['_view'] = 'orden/add2';
            $this->load->view('layouts/main', $data);
        }
    }
    function continuar()
    {
        $this->load->model('Producto_model');
        $data['all_productos'] = $this->Producto_model->get_all_productos();

        $this->load->model('Cliente_model');
        $data['all_clientes'] = $this->Cliente_model->get_all_clientes();

        $data['_view'] = 'vitrina/continuar';
        $this->load->view('layouts/index', $data);
    }


    /*
     * Editing a orden
     */
    function edit($id)
    {
        // check if the orden exists before trying to edit it
        $data['orden'] = $this->Orden_model->get_orden($id);

        if (isset($data['orden']['id'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'producto_fk' => $this->input->post('producto_fk'),
                    'cliente_fk' => $this->input->post('cliente_fk'),
                    'cantidad' => $this->input->post('cantidad'),
                    'precio' => $this->input->post('precio'),
                    'creado_en' => $this->input->post('creado_en'),
                );

                $this->Orden_model->update_orden($id, $params);
                redirect('orden/index');
            } else {
                $this->load->model('Producto_model');
                $data['all_productos'] = $this->Producto_model->get_all_productos();

                $this->load->model('Cliente_model');
                $data['all_clientes'] = $this->Cliente_model->get_all_clientes();

                $data['_view'] = 'orden/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The orden you are trying to edit does not exist.');
    }

    /*
     * Deleting orden
     */
    function remove($id)
    {
        $orden = $this->Orden_model->get_orden($id);

        // check if the orden exists before trying to delete it
        if (isset($orden['id'])) {
            $this->Orden_model->delete_orden($id);
            redirect('orden/index');
        } else
            show_error('The orden you are trying to delete does not exist.');
    }
}
